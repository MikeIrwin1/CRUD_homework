# CRUD Quiz

# Use the solution to this afternoon's Property Tracker lab to answer the following questions. Please write your answers under each question, push the file to GitHub, and submit in the usual way.

## MVP Questions

# In our Property Tracker application:
#
# Q1. Where are we instantiating instances of the `Property` class?

In console.rb lines 6, 15 and 24


# Q2. Where are we defining the SQL that enables us to save the ruby `Property` object into the database?
In property.rb lines 18-29
    sql = "INSERT INTO properties
   (
     address,
     value,
     bedrooms,
     build
   )
   VALUES
   (
     $1,$2,$3,$4
   )
   RETURNING id"

# Q3. In console.rb, which lines modify the database?
lines 4, 13, 22, 31, 33

# Q4. Why do we not define the id of a `Property` object at the point we instantiate it (‘new it up’)?

Because we do not know what the id will be until it is entered into the database.

# Q5. Where and how do we assign the id (that is generated by the database) to the ruby `Property` object?
property.rb line 32
we have to save the returned value from the db.exec_prepared function into the @id instance variable. Before this works we have to select the 0th index from the returned array type object and select the 'id' key from the hash which results. this needs to be converted to an integer before storing in @id.

# Q6. Why do we put a guard (an `if` clause) on the `@id` attribute in the constructor?
we don't want to set the id to be 0 in the case of the id not existing yet. so we say if option['id']. if it doesnt exist then this returns false and the assignment of @id doesnt run. if you dont have it then option['id'] returns nil which when converted to an integer becomes 0

# Q7. Why are some of the CRUD actions represented by instance methods, and others by class methods?
some actions we want to be run on every instance of the class that is created (these are class methods) and others we only want to run on one instance of the class (instance methods)

# Q8. What type of data structure is returned by calls to `db.exec_prepared()`? In the `save` method, how do we access the id from the returned data structure?
it is an array of hashes. We access the id by calling the first element in the array and then the 'id' key from that element.


# Q9. Why do we use prepared statements when performing database operations?
We use prepared statements when performing database operations to speed up the process and also to protect from SQL injections from a user. It basically helps prevent dangerous code being run during the database operation "robert'): DROP TABLE"

## Extension Questions

# Look at the `find_by_id` and `find_by_address` methods in the `Property` class.

# Q10. What do they take in as their arguments?
find by id takes in properties id instance variable and find_by_address takes in an address string

# Q11. What are their return values?
it returns a new instance of the Property class with the values from the database table.
